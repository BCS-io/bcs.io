#!/usr/bin/env bash

#
# push subtree to repo
#

branch=main
code_path=rails
platform=dokku
environment=staging
force=false

print_usage() {
  printf "Git push subtree\n\n"
  printf "Platform flag options:\n"
  printf "  D - Dokku (default)\n"
  printf "  H - Heroku\n"
  printf "\n"
  printf "Environment flag options:\n"
  printf "  s - staging (default)\n"
  printf "  p - production\n"
  printf "\n"
  printf "Push option :\n"
  printf "  f - force push\n"
  printf "\n"
  printf "Example: deploy -D -p \n"
  printf "\n\n"
  printf "Note:\n"
  printf "\n"
  printf "Deployment requires remote repository tracked to plaform and environment\n"
  printf "Platforms supported Dokku and Heroku\n"
  printf "\n"
  printf "Enviroments supported is limited to the environments added to Rails.\n"
  printf "By default development, test, production but it is common to add staging\n"
  printf "\n"
  printf "Example: \n"
  printf " -  git remote add dokku-staging dokku@my-server.example.com:app-name \n"
}

print_banner() {
  printf "\n\n"
  printf "  ******************************************\n"
  printf "  *                                        *\n"
  printf "  *      push production                   *\n"
  printf "  *                                        *\n"
  printf "  ******************************************\n"
  printf "\n\n"
}

are_you_sure() {
  read -p "Continue (y/n)? " choice
  case "$choice" in
    y|Y ) printf "\nYes. Continuing...\n";;
    n|N ) printf "\nNo. Exiting\n"
          exit 1 ;;
    * ) printf "\nInvalid. Exiting\n"
        exit 1 ;;
  esac
}

while getopts 'b:DHfhps' flag; do
  case "${flag}" in
    b) branch=$OPTARG ;;
    D) platform=dokku;;
    H) platform=heroku;;
    f) force=true ;;
    h) print_usage
       exit 1 ;;
    p) print_banner
       are_you_sure
       environment=production ;;
    s) environment=staging;;
    *) print_usage
       exit 1;;
  esac
done


if (( $OPTIND == 1 )); then
  print_usage
  exit 1
fi

remote_repo=${platform}-${environment}

if [ "$force" = true ]; then
  # echo "force push"
  git push $remote_repo `git subtree split --prefix $code_path ${branch}`:${branch} --force
else
  git subtree push --prefix $code_path $remote_repo ${branch}
fi
